comp = get_shell().host_computer
root = comp.File("/")
player_check = active_user

// Function to print formatted messages with different colors
printMsg = function(msg, color="green")
    print("<color=" + color + "><b>" + msg + "</b></color>")
end function

// Function to secure home directory
secureHome = function()
    printMsg("Running Security on Home Computer.")
    print("=============================================================\n")
    
    // Remove all permissions before adding any back
    for folderPerm in root.get_folders
        folderPerm.chmod("u-rwx", true)
        folderPerm.chmod("g-rwx", true)
        folderPerm.chmod("o-rwx", true)

        folderPerm.set_owner("root", true)
        folderPerm.set_group("root", true)
    end for
    
    // Secure /usr/bin directory
    usrFolder = comp.File("/usr/bin")
    if not is_folder(usrFolder) then
        printMsg("/usr/bin folder is missing or empty.", "red")
        return
    else
         // Iterate through /usr/bin files
        usrFiles = usrFolder.get_files()
        for usrFile in usrFiles
            if usrFile.name == "Terminal.exe" then
                printMsg("Let's give Terminal.exe permissions user|group read|execute now")
                usrFile.chmod("u+rx", false)
                usrFile.chmod("g+rx", false)
                // Print the new permission of Terminal.exe
                printMsg(usrFile.path + " Has " + usrFile.permissions, "orange")
            end if
            if usrFile.name == "Chat.exe" then
                printMsg("Let's give Terminal.exe permissions user|group read|execute now")
                usrFile.chmod("u+rx", false)
                usrFile.chmod("g+rx", false)
                // Print the new permission of Terminal.exe
                printMsg(usrFile.path + " Has " + usrFile.permissions, "orange")
            end if
        end for
    end if
    wait(0.2)
    // Secure /bin directory
    binFolder = comp.File("/bin")
    if not is_folder(binFolder) then
        printMsg("/bin folder is missing or empty.", "red")
        return
    else
         // Iterate through /usr/bin files
        binFiles = binFolder.get_files()
        for files in binFiles
            if files.name == "sudo" then
                print("\n")
                printMsg("let's make sure you can gain root access with sudo")
                files.chmod("u+rx", false)
                files.chmod("g+rx", false)
                // Print the new permission of Terminal.exe
                printMsg(files.path + " Has " + files.permissions, "orange")
            end if
        end for
    end if
    wait(0.2)
    // Secure /etc directory
    etcFolder = comp.File("/etc")
    if not is_folder(etcFolder) then
        printMsg("/etc folder is missing or empty.", "red")
        return
    else
        // Iterate through /etc files
        for etcF in etcFolder.get_files()
            if etcF.name == "passwd" then
                print("\n")
                printMsg("Deleing the passwd file now", "orange")
                etcF.delete
            end if
        end for
    end if
    wait(0.2)
    // Secure /home directory
    homeFolder = comp.File("/home")
    if not is_folder(homeFolder) then
        printMsg("Home folder is missing or empty.", "red")
        return
    else
         // Iterate through user folders
        for userFolder in homeFolder.get_folders()

            rootPerms = root.permissions       
            user = userFolder.name
            print("\n")
            

            if userFolder.name == "guest" then
                printMsg("Deleting guest folder")
                userFolder.delete
            else
                printMsg("Securing /home/" + user + " directory", "green")
                // Set permissions and ownership
                userFolder.chmod("u+rx", true)
                userFolder.chmod("g+rx", true)
                userFolder.set_owner("root")
                userFolder.set_group("root")
                newPerms = userFolder.permissions
                printMsg("Changed permissions for " + userFolder.path + " " + newPerms, "orange")
            end if

            // Check and delete specific files
            userConfigs = comp.File("/home/" + user + "/Config")
            if is_folder(userConfigs) then
                printMsg("Checking /Config folder for vulnerable files", "blue")
                configFiles = userConfigs.get_files()
                for configFile in configFiles           
                    if configFile.name == "Map.conf" or configFile.name == "Bank.txt" or configFile.name == "Mail.txt" then
                        printMsg("Deleted " + configFile.name + " for: " + user, "orange")
                        configFile.delete()
                    else
                        printMsg("Looks like no files are needed to be cleaned", orange)
                    end if
                end for
            else
                printMsg("No Config folder found for user: " + user, "yellow")
            end if
        end for
    end if
end function

// Secure Server
secureServer = function()
    printMsg("Running Security on Server")
    print("=============================================================\n")

    // Remove all permissions before adding any back
    for folderPerm in root.get_folders
        folderPerm.chmod("u-rwx", true)
        folderPerm.chmod("g-rwx", true)
        folderPerm.chmod("o-rwx", true)

        folderPerm.set_owner("root", true)
        folderPerm.set_group("root", true)
    end for
    
    // Secure /etc directory
    etcFolder = comp.File("/etc")
    if not is_folder(etcFolder) then
        printMsg("/etc folder is missing or empty.", "red")
        return
    else
        // Iterate through /etc files
        for etcF in etcFolder.get_files()
            if etcF.name == "passwd" then
                print("\n")
                printMsg("Deleing the passwd file now", "orange")
                etcF.delete
            end if
        end for
    end if
    
    // Check /home folder for guest then delete it
    guestFolder = comp.File("/home/guest")
    if not is_folder(guestFolder) then
        printMsg("/home/guest is missing or empty.", "red")
        return
    else
        printMsg("Removing guest folder now", "orange")
        guestFolder.delete()
    end if
end function

// secure Router
secureRouter = function()

    printMsg("Running Security on Router")
    
    // Remove all permissions before adding any back
    for folderPerm in root.get_folders
        folderPerm.chmod("u-rwx", true)
        folderPerm.chmod("g-rwx", true)
        folderPerm.chmod("o-rwx", true)

        folderPerm.set_owner("root", true)
        folderPerm.set_group("root", true)
    end for

    // Secure /bin directory
    binFolder = comp.File("/bin")
    if not is_folder(binFolder) then
        printMsg("/bin folder is missing or empty.", "red")
        return
    else
        // Iterate through /bin files
        printMsg("Found /bin", "yellow")
        binFiles = binFolder.get_files()
        for files in binFiles
            if files.name == "cd" then
                copycd = files.copy("/bin/cd", "cd")
            else
                printMsg("Deleting all /bin files except cd")
                files.delete
            end if
        end for
    end if

    // Remove rkit folder from /root or /home/guest
    rkitFolder = comp.File("/root/rkit")
    if not is_folder(rkitFolder) then
        rkitFolder = comp.File("/home/guest/rkit")
        if not is_folder(rkitFolder) then
            printMsg("rkit folder is not found in /root or /home/guest", "blue")
            return
        else
            printMsg("Deleting rkit folder")
            rkitFolder.delete()
        end if
    end if
    
end function

if player_check == "root" then
    printMsg("(h|s|r  - home, server, router)")
    ask = user_input("|>  ")
    if ask == "Home" or ask == "h" or ask == "home" then
        secureHome()
    else if ask == "Server" or ask == "s" or ask == "server" then
        secureServer()
    else if ask == "Router" or ask == "r" or ask == "router" then
        secureRouter()
    else
        printMsg("Invalid input. Please enter 'h', 's', or 'r'.", "red")
    end if
else
    exit("Run this script as root in order to change permissions and removal of vulnerable files depending on choice.")
end if
